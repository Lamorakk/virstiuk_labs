//Дано цілочисельний масив А розміру N і цілі числа К і L (l<=K<=N). Переставити в зворотному порядку елементи масиву, розташовані між елементами Ак і Аl, включаючи ці елементи, і розмістити в новому динамічному масиві. Вивести розмір і вміст масиву.(Розмірність 11) 
//Дано масив дійсних чисел А розміру NхN. Сформувати одновимірний динамічний масив з елементів вихідного масиву, розташованих під головною діагоналлю. (4x4)
#include <iostream>
#include <vector>

// Функція для виконання завдання 1
void task1() {
    int N = 11; // Розмір масиву А
    int A[N] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}; // Сам масив А
    int K = 4; // Індекс Аk
    int L = 8; // Індекс Аl

    // Перевірка на правильність введених індексів
    if (L <= K || K < 0 || L >= N) {
        std::cout << "Неправильні вхідні дані." << std::endl;
        return;
    }

    std::vector<int> reversedArray;

    // Додавання елементів масиву A в зворотньому порядку в новий масив
    for (int i = L; i >= K; i--) {
        reversedArray.push_back(A[i]);
    }

    // Виведення розміру та вмісту нового масиву
    std::cout << "Розмір нового масиву: " << reversedArray.size() << std::endl;
    std::cout << "Вміст нового масиву: ";
    for (int i : reversedArray) {
        std::cout << i << " ";
    }
    std::cout << std::endl;
}

// Функція для виконання завдання 2
void task2() {
    int N = 4; // Розмір вихідного масиву NxN
    double A[N][N] = {{1.0, 2.0, 3.0, 4.0},
                      {5.0, 6.0, 7.0, 8.0},
                      {9.0, 10.0, 11.0, 12.0},
                      {13.0, 14.0, 15.0, 16.0}}; // Сам масив A

    // Розмір одновимірного динамічного масиву буде N * (N - 1) / 2
    int size = N * (N - 1) / 2;
    double *resultArray = new double[size];
    int idx = 0;

    // Заповнення одновимірного динамічного масиву елементами під головною діагоналлю
    for (int i = 0; i < N; i++) {
        for (int j = i + 1; j < N; j++) {
            resultArray[idx] = A[j][i];
            idx++;
        }
    }

    // Виведення розміру та вмісту одновимірного динамічного масиву
    std::cout << "Розмір одновимірного динамічного масиву: " << size << std::endl;
    std::cout << "Вміст одновимірного динамічного масиву: ";
    for (int i = 0; i < size; i++) {
        std::cout << resultArray[i] << " ";
    }
    std::cout << std::endl;

    // Звільнення пам'яті, виділеної для одновимірного динамічного масиву
    delete[] resultArray;
}

int main() {
    while (true) {
        int choice;
        std::cout << "Виберіть завдання (1 або 2) або 0 для виходу: ";
        std::cin >> choice;

        switch (choice) {
            case 0:
                return 0; // Вихід з програми
            case 1:
                task1();
                break;
            case 2:
                task2();
                break;
            default:
                std::cout << "Невірний вибір завдання." << std::endl;
                break;
        }
    }

    return 0;
}

